#!/bin/sh

# Generate descriptor file for CANMIO-SVO modules.
# Use this script to avoid duplication and reduce maintenance.

# Used to omit trailing comma at end of lists.
ending[0]=',' # False - not end of list, add a comma.
ending[1]=''  # True  - at end of list, omit trailing comma.

cat <<EOF
{
  "comment":"Generated by $0",
  "moduleName":"CANMIO-SVO",
  "NVsetNeedsLearnMode": true,
  "nodeVariables": [
EOF

for ch in 1 2 3 4 5 6 7 8
do
    cat <<EOF
    {
      "type": "NodeVariableGroup",
      "displayTitle": "Servo $ch",
      "groupItems": [
        {
          "type": "NodeVariableSlider",
          "nodeVariableIndex": $((1+$ch*4)),
          "displayTitle": "ON end position"
        },
        {
          "type": "NodeVariableSlider",
          "nodeVariableIndex": $((2+$ch*4)),
          "displayTitle": "OFF end position"
        },
        {
          "type": "NodeVariableSlider",
          "nodeVariableIndex": $((3+$ch*4)),
          "displayTitle": "ON speed"
        },
        {
          "type": "NodeVariableSlider",
          "nodeVariableIndex": $((4+$ch*4)),
          "displayTitle": "OFF speed"
        },
        {
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 1,
          "displayTitle": "Cut off at end position",
          "bit": $(($ch-1))
        },
        {
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 3,
          "displayTitle": "Move at startup enable",
          "bit": $(($ch-1))
        },
        {
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 2,
          "displayTitle": "Startup position",
          "bit": $(($ch-1))
        },
        {
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 4,
          "displayTitle": "Wait for other servos to complete",
          "bit": $(($ch-1))
        },
        {
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 37,
          "displayTitle": "Testing",
          "bit": $(($ch-1))
        }
      ]
    }${ending[$(($ch == 8))]}
EOF
done

cat <<EOF
  ]
}
EOF
