#!/bin/sh

# Generate descriptor file for CANCMD modules.
# Use this script to avoid duplication and reduce maintenance.

TZ= datestring=`date +%Y%m%d%H%M`

# Default module type is CANCMD
type=CMD
moduleName=CANCMD

while getopts 't:v:' opt; do
  case "$opt" in
    t)
      case $OPTARG in
      CMDB)
        type=CMDB
        moduleName=CANCMDB
        ;;
      CSB)
        type=CSB
        moduleName=CANCSB
        channels=24
        ;;
      *)
        echo "$0: Unknown module type '$OPTARG'"
        echo "Usage: $0 [-t type] [-p processor] -v <version>"
        exit 1
        ;;
      esac
      ;;
    v)
      ver=$OPTARG
      ;;
    *)
      echo "Usage: $0 [-t type] [-p processor] -v <version>"
      exit 1
      ;;
  esac
done
shift "$(($OPTIND -1))"

if [ -z "$ver" ]
then
  echo "Version not set."
  echo "Usage: $0 [-t type] [-p processor] -v <version>"
  exit 1
fi

function commaIf()
{
  if [ "$@" ]
  then
    echo ","
  else
    echo ""
  fi
}

cat <<EOF
{
  "generated":"Generated by $0 ${type:+-t $type }-v $ver",
  "timestamp": "$datestring",
  "moduleName":"$moduleName",
  "nodeVariables": [
    {
      "displayTitle": "Running",
      "type": "NodeVariableGroup",
      "groupItems": [
        {
          "displayTitle": "Silent",
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 2,
          "bit": 0
        },
        {
          "displayTitle": "Permit Steal",
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 2,
          "bit": 1
        },
        {
          "displayTitle": "Permit Share",
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 2,
          "bit": 2
        },
        {
          "displayTitle": "Stop on Timeout",
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 2,
          "bit": 5
        },
        {
          "displayTitle": "Walkabout Timeout",
          "type": "NodeVariableSlider",
          "displayUnits": "s",
          "nodeVariableIndex": 5
        },
        {
          "displayTitle": "Track Off if Stop All",
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 3,
          "bit": 4
        },
        {
          "displayTitle": "Maximum Speed",
          "type": "NodeVariableSlider",
          "displayUnits": "%",
          "displayScale": 0.769,
          "max" : 130,
          "nodeVariableIndex": 16
        }
      ]
    },
    {
      "displayTitle": "Shuttles",
      "type": "NodeVariableGroup",
      "groupItems": [
        {
          "displayTitle": "Enable Shuttles",
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 2,
          "bit": 7
        },
        {
          "displayTitle": "Honk Interval",
          "visibilityLogic": { "nvBit": {"index": 2, "bit": 7}, "equals": 1},
          "type": "NodeVariableSlider",
          "displayUnits": "iterations",
          "nodeVariableIndex": 15
        }$(commaIf "$type" != "CMD")
EOF
if [ "$type" != "CMD" ]
then
  cat <<EOF
        {
          "displayTitle": "Enable TOTI Inputs",
          "visibilityLogic": { "nvBit": {"index": 2, "bit": 7}, "equals": 1},
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 3,
          "bit": 5
        }
EOF
fi
  cat <<EOF
      ]
    },
    {
      "displayTitle": "Event Control",
      "type": "NodeVariableGroup",
      "groupItems": [

        {
          "displayTitle": "Permit Event Reset",
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 2,
          "bit": 3
        },
        {
          "displayTitle": "Map Event",
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 2,
          "bit": 4
        },
        {
          "displayTitle": "Start of Day",
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 2,
          "bit": 6
        },
        {
          "displayTitle": "SoD Delay",
          "visibilityLogic": { "nvBit":{"index":2, "bit":6}, "equals": 1 },
          "type": "NodeVariableSlider",
          "displayUnits": "s",
          "displayScale": 0.5,
          "displayOffset": 2,
          "nodeVariableIndex": 14
        },
        {
          "displayTitle": "DCC Accessory Mapped Node",
          "type": "NodeVariableDual",
          "nodeVariableIndexHigh": 11,
          "nodeVariableIndexLow": 12
        }
      ]
    },
    {
      "displayTitle": "Track Power Control",
      "type": "NodeVariableGroup",
      "groupItems": [
EOF
if [ "$type" = "CMD" ]
then
  cat <<EOF
        {
          "displayTitle": "J7 Jumper Control",
          "type": "NodeVariableSelect",
          "nodeVariableIndex": 3,
          "bitMask": 3,
          "options": [
            {"label": "Use J7", "value": 2},
            {"label": "Use J7", "value": 3},
            {"label": "Main Output", "value": 0},
            {"label": "Use Booster", "value": 1}
          ]
        },
EOF
fi
cat <<EOF
        {
          "displayTitle": "Main Current Limit",
          "type": "NodeVariableSlider",
          "nodeVariableIndex": 6
        },
        {
          "displayTitle": "Service Current Limit",
          "type": "NodeVariableSlider",
          "nodeVariableIndex": 7
        },
        {
          "displayTitle": "Current Multiplier",
          "type": "NodeVariableSlider",
          "displayUnits": "* x mA",
          "nodeVariableIndex": 8
        },
        {
          "displayTitle": "ZTC Mode",
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 3,
          "bit": 3
        },
        {
          "displayTitle": "Enable Railcom Cutout",
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 3,
          "bit": 6
        },
        {
          "displayTitle": "Increase for ACK Pulses",
          "type": "NodeVariableSlider",
          "nodeVariableIndex": 9
        },
        {
          "displayTitle": "Send Current Interval",
          "type": "NodeVariableSlider",
          "displayUnits": "s",
          "nodeVariableIndex": 13
        }$( commaIf "$type" = "CMDB" )
EOF
if [ "$type" = "CMDB" ]
then
  cat <<EOF
        {
          "displayTitle": "Shoot Through Delay",
          "type": "NodeVariableSlider",
          "displayUnits": "ms",
          "displayScale": 0.5,
          "nodeVariableIndex": 10
        }
EOF
fi
cat <<EOF
      ]
    },
    {
      "displayTitle": "Not Implemented",
      "type": "NodeVariableGroup",
      "groupItems": [
        {
          "displayTitle": "Command Station Number",
          "type": "NodeVariableNumber",
          "nodeVariableIndex": 1
        },
        {
          "displayTitle": "Analogue Detection",
          "type": "NodeVariableBitSingle",
          "nodeVariableIndex": 3,
          "bit": 2
        }
      ]
    }
  ],
  "eventVariables": [
  ]
}
EOF
